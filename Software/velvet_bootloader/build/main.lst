ARM GAS  /tmp/ccF2lwUI.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB133:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** // #include "usb_device.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "const.h"
  26:Core/Src/main.c **** // #include "usb.h"
  27:Core/Src/main.c **** #include "wifi.h"
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccF2lwUI.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** IWDG_HandleTypeDef hiwdg;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** UART_HandleTypeDef huart4;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** static void MX_GPIO_Init(void);
  56:Core/Src/main.c **** static void MX_UART4_Init(void);
  57:Core/Src/main.c **** // static void MX_IWDG_Init(void);
  58:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  63:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /**
  68:Core/Src/main.c ****   * @brief  The application entry point.
  69:Core/Src/main.c ****   * @retval int
  70:Core/Src/main.c ****   */
  71:Core/Src/main.c **** int main(void)
  72:Core/Src/main.c **** {
  73:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  74:Core/Src/main.c ****   uint8_t out[50];
  75:Core/Src/main.c ****   /* USER CODE END 1 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  80:Core/Src/main.c ****   HAL_Init();
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END Init */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Configure the system clock */
  87:Core/Src/main.c ****   SystemClock_Config();
  88:Core/Src/main.c **** 
ARM GAS  /tmp/ccF2lwUI.s 			page 3


  89:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE END SysInit */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Initialize all configured peripherals */
  94:Core/Src/main.c ****   MX_GPIO_Init();
  95:Core/Src/main.c ****   MX_UART4_Init();
  96:Core/Src/main.c ****   // MX_USB_DEVICE_Init();
  97:Core/Src/main.c ****   // MX_IWDG_Init();
  98:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  99:Core/Src/main.c ****   HAL_Delay(5000);
 100:Core/Src/main.c ****   // USBPrint("START\n");
 101:Core/Src/main.c ****   
 102:Core/Src/main.c ****   bool temp = isUpdate(&huart4);
 103:Core/Src/main.c ****   // sprintf(out, "IS UPDATE: %d\n", temp);
 104:Core/Src/main.c ****   // USBPrint(out);
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   if (temp){
 107:Core/Src/main.c ****     bool updateBool = UpdateFW(&huart4);
 108:Core/Src/main.c ****     // sprintf(out, "IS UPDATE: %d\n", updateBool);
 109:Core/Src/main.c ****     // USBPrint(out);
 110:Core/Src/main.c ****   }
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   
 113:Core/Src/main.c ****   // USBPrint("GO TO APP\n");
 114:Core/Src/main.c ****   GoToApplication();
 115:Core/Src/main.c ****   
 116:Core/Src/main.c ****   // USBPrint("END\n");
 117:Core/Src/main.c ****   /* USER CODE END 2 */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* Infinite loop */
 120:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 121:Core/Src/main.c ****   while (1)
 122:Core/Src/main.c ****   {
 123:Core/Src/main.c ****     
 124:Core/Src/main.c ****     // USBprintArray(uartReadBuf, 4);
 125:Core/Src/main.c ****     
 126:Core/Src/main.c ****     /* USER CODE END WHILE */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 129:Core/Src/main.c ****   }
 130:Core/Src/main.c ****   /* USER CODE END 3 */
 131:Core/Src/main.c **** }
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** /**
 134:Core/Src/main.c ****   * @brief System Clock Configuration
 135:Core/Src/main.c ****   * @retval None
 136:Core/Src/main.c ****   */
 137:Core/Src/main.c **** void SystemClock_Config(void)
 138:Core/Src/main.c **** {
 139:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 143:Core/Src/main.c ****   */
 144:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 145:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
ARM GAS  /tmp/ccF2lwUI.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 148:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 152:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 159:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 160:Core/Src/main.c ****   {
 161:Core/Src/main.c ****     Error_Handler();
 162:Core/Src/main.c ****   }
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 165:Core/Src/main.c ****   */
 166:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 167:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 168:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 171:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 174:Core/Src/main.c ****   {
 175:Core/Src/main.c ****     Error_Handler();
 176:Core/Src/main.c ****   }
 177:Core/Src/main.c **** }
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /**
 180:Core/Src/main.c ****   * @brief IWDG Initialization Function
 181:Core/Src/main.c ****   * @param None
 182:Core/Src/main.c ****   * @retval None
 183:Core/Src/main.c ****   */
 184:Core/Src/main.c **** // static void MX_IWDG_Init(void)
 185:Core/Src/main.c **** // {
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** //   /* USER CODE BEGIN IWDG_Init 0 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** //   /* USER CODE END IWDG_Init 0 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** //   /* USER CODE BEGIN IWDG_Init 1 */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** //   /* USER CODE END IWDG_Init 1 */
 194:Core/Src/main.c **** //   hiwdg.Instance = IWDG;
 195:Core/Src/main.c **** //   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 196:Core/Src/main.c **** //   hiwdg.Init.Reload = 4095;
 197:Core/Src/main.c **** //   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 198:Core/Src/main.c **** //   {
 199:Core/Src/main.c **** //     Error_Handler();
 200:Core/Src/main.c **** //   }
 201:Core/Src/main.c **** //   /* USER CODE BEGIN IWDG_Init 2 */
 202:Core/Src/main.c **** 
ARM GAS  /tmp/ccF2lwUI.s 			page 5


 203:Core/Src/main.c **** //   /* USER CODE END IWDG_Init 2 */
 204:Core/Src/main.c **** 
 205:Core/Src/main.c **** // }
 206:Core/Src/main.c **** 
 207:Core/Src/main.c **** /**
 208:Core/Src/main.c ****   * @brief UART4 Initialization Function
 209:Core/Src/main.c ****   * @param None
 210:Core/Src/main.c ****   * @retval None
 211:Core/Src/main.c ****   */
 212:Core/Src/main.c **** static void MX_UART4_Init(void)
 213:Core/Src/main.c **** {
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 0 */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* USER CODE END UART4_Init 0 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 1 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* USER CODE END UART4_Init 1 */
 222:Core/Src/main.c ****   huart4.Instance = UART4;
 223:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 224:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 225:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 226:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 227:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 228:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 229:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 230:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 231:Core/Src/main.c ****   {
 232:Core/Src/main.c ****     Error_Handler();
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 2 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* USER CODE END UART4_Init 2 */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c **** }
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** /**
 241:Core/Src/main.c ****   * @brief GPIO Initialization Function
 242:Core/Src/main.c ****   * @param None
 243:Core/Src/main.c ****   * @retval None
 244:Core/Src/main.c ****   */
 245:Core/Src/main.c **** static void MX_GPIO_Init(void)
 246:Core/Src/main.c **** {
  28              		.loc 1 246 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 82B0     		sub	sp, sp, #8
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 249:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  36              		.loc 1 249 3 view .LVU1
  37              	.LBB8:
ARM GAS  /tmp/ccF2lwUI.s 			page 6


  38              		.loc 1 249 3 view .LVU2
  39 0002 0021     		movs	r1, #0
  40 0004 0091     		str	r1, [sp]
  41              		.loc 1 249 3 view .LVU3
  42 0006 0B4B     		ldr	r3, .L3
  43 0008 1A6B     		ldr	r2, [r3, #48]
  44 000a 42F08002 		orr	r2, r2, #128
  45 000e 1A63     		str	r2, [r3, #48]
  46              		.loc 1 249 3 view .LVU4
  47 0010 1A6B     		ldr	r2, [r3, #48]
  48 0012 02F08002 		and	r2, r2, #128
  49 0016 0092     		str	r2, [sp]
  50              		.loc 1 249 3 view .LVU5
  51 0018 009A     		ldr	r2, [sp]
  52              	.LBE8:
  53              		.loc 1 249 3 view .LVU6
 250:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  54              		.loc 1 250 3 view .LVU7
  55              	.LBB9:
  56              		.loc 1 250 3 view .LVU8
  57 001a 0191     		str	r1, [sp, #4]
  58              		.loc 1 250 3 view .LVU9
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 42F00102 		orr	r2, r2, #1
  61 0022 1A63     		str	r2, [r3, #48]
  62              		.loc 1 250 3 view .LVU10
  63 0024 1B6B     		ldr	r3, [r3, #48]
  64 0026 03F00103 		and	r3, r3, #1
  65 002a 0193     		str	r3, [sp, #4]
  66              		.loc 1 250 3 view .LVU11
  67 002c 019B     		ldr	r3, [sp, #4]
  68              	.LBE9:
  69              		.loc 1 250 3 view .LVU12
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** }
  70              		.loc 1 252 1 is_stmt 0 view .LVU13
  71 002e 02B0     		add	sp, sp, #8
  72              	.LCFI1:
  73              		.cfi_def_cfa_offset 0
  74              		@ sp needed
  75 0030 7047     		bx	lr
  76              	.L4:
  77 0032 00BF     		.align	2
  78              	.L3:
  79 0034 00380240 		.word	1073887232
  80              		.cfi_endproc
  81              	.LFE133:
  83              		.section	.text.GoToApplication,"ax",%progbits
  84              		.align	1
  85              		.global	GoToApplication
  86              		.syntax unified
  87              		.thumb
  88              		.thumb_func
  89              		.fpu fpv4-sp-d16
  91              	GoToApplication:
  92              	.LFB134:
 253:Core/Src/main.c **** 
ARM GAS  /tmp/ccF2lwUI.s 			page 7


 254:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** void GoToApplication() {
  93              		.loc 1 256 24 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97 0000 38B5     		push	{r3, r4, r5, lr}
  98              	.LCFI2:
  99              		.cfi_def_cfa_offset 16
 100              		.cfi_offset 3, -16
 101              		.cfi_offset 4, -12
 102              		.cfi_offset 5, -8
 103              		.cfi_offset 14, -4
 257:Core/Src/main.c **** 	// UART_Printf("Go to the Application...\r\n");
 258:Core/Src/main.c **** // 	typedef void (*pFunction)(void);
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** // 	// MX_IWDG_Init();
 261:Core/Src/main.c **** 
 262:Core/Src/main.c **** // 	uint32_t jumpAddress = *(__IO uint32_t*) (APP_START_ADDR + 4);
 263:Core/Src/main.c **** // 	pFunction JumpToApplication = (pFunction) jumpAddress;
 264:Core/Src/main.c **** 
 265:Core/Src/main.c **** // 	// stop all interrupts
 266:Core/Src/main.c **** // 	__disable_irq();
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** // 	SysTick->CTRL = 0;
 269:Core/Src/main.c **** // 	SysTick->LOAD = 0;
 270:Core/Src/main.c **** // 	SysTick->VAL = 0;
 271:Core/Src/main.c **** 
 272:Core/Src/main.c **** // //	while(1);
 273:Core/Src/main.c **** // 	SCB->VTOR = APP_START_ADDR;
 274:Core/Src/main.c **** 
 275:Core/Src/main.c **** // 	__set_MSP(*(__IO uint32_t*) APP_START_ADDR);
 276:Core/Src/main.c **** // 	JumpToApplication();
 277:Core/Src/main.c **** 
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   uint32_t appJumpAdress;
 104              		.loc 1 280 3 view .LVU15
 281:Core/Src/main.c **** 	appJumpAdress = *((volatile uint32_t*) (APP_START_ADDR + 4));
 105              		.loc 1 281 2 view .LVU16
 106              		.loc 1 281 16 is_stmt 0 view .LVU17
 107 0002 064C     		ldr	r4, .L7
 108 0004 6568     		ldr	r5, [r4, #4]
 109              	.LVL0:
 282:Core/Src/main.c **** 
 283:Core/Src/main.c **** 	HAL_RCC_DeInit();
 110              		.loc 1 283 2 is_stmt 1 view .LVU18
 111 0006 FFF7FEFF 		bl	HAL_RCC_DeInit
 112              	.LVL1:
 284:Core/Src/main.c **** 	HAL_DeInit();
 113              		.loc 1 284 2 view .LVU19
 114 000a FFF7FEFF 		bl	HAL_DeInit
 115              	.LVL2:
 285:Core/Src/main.c **** 
 286:Core/Src/main.c **** 	void(*GoToApp)(void);
 116              		.loc 1 286 2 view .LVU20
ARM GAS  /tmp/ccF2lwUI.s 			page 8


 287:Core/Src/main.c **** 	GoToApp = (void (*) (void))appJumpAdress;
 117              		.loc 1 287 2 view .LVU21
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** 	__disable_irq();
 118              		.loc 1 289 2 view .LVU22
 119              	.LBB10:
 120              	.LBI10:
 121              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
ARM GAS  /tmp/ccF2lwUI.s 			page 9


  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
ARM GAS  /tmp/ccF2lwUI.s 			page 10


 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 122              		.loc 2 140 27 view .LVU23
 123              	.LBB11:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 124              		.loc 2 142 3 view .LVU24
 125              		.syntax unified
 126              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 127 000e 72B6     		cpsid i
 128              	@ 0 "" 2
 129              		.thumb
 130              		.syntax unified
 131              	.LBE11:
 132              	.LBE10:
 290:Core/Src/main.c **** 	__set_MSP(*((volatile uint32_t*)APP_START_ADDR));
 133              		.loc 1 290 2 view .LVU25
 134 0010 2368     		ldr	r3, [r4]
 135              	.LVL3:
 136              	.LBB12:
 137              	.LBI12:
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccF2lwUI.s 			page 11


 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
ARM GAS  /tmp/ccF2lwUI.s 			page 12


 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
ARM GAS  /tmp/ccF2lwUI.s 			page 13


 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccF2lwUI.s 			page 14


 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 138              		.loc 2 331 27 view .LVU26
 139              	.LBB13:
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 140              		.loc 2 333 3 view .LVU27
 141              		.syntax unified
 142              	@ 333 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 143 0012 83F30888 		MSR msp, r3
 144              	@ 0 "" 2
 145              	.LVL4:
 146              		.loc 2 333 3 is_stmt 0 view .LVU28
 147              		.thumb
 148              		.syntax unified
 149              	.LBE13:
 150              	.LBE12:
 291:Core/Src/main.c **** 	GoToApp();
 151              		.loc 1 291 2 is_stmt 1 view .LVU29
 152 0016 A847     		blx	r5
 153              	.LVL5:
 292:Core/Src/main.c **** }
 154              		.loc 1 292 1 is_stmt 0 view .LVU30
 155 0018 38BD     		pop	{r3, r4, r5, pc}
 156              	.LVL6:
 157              	.L8:
 158              		.loc 1 292 1 view .LVU31
 159 001a 00BF     		.align	2
 160              	.L7:
 161 001c 00000108 		.word	134283264
 162              		.cfi_endproc
 163              	.LFE134:
 165              		.section	.text.Error_Handler,"ax",%progbits
 166              		.align	1
 167              		.global	Error_Handler
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 171              		.fpu fpv4-sp-d16
 173              	Error_Handler:
 174              	.LFB135:
 293:Core/Src/main.c **** 
 294:Core/Src/main.c **** // void Reboot() {
 295:Core/Src/main.c **** // 	UART_Printf("Go to bootloader...\r\n");
 296:Core/Src/main.c **** // 	hiwdg.Instance = IWDG;
ARM GAS  /tmp/ccF2lwUI.s 			page 15


 297:Core/Src/main.c **** // 	hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 298:Core/Src/main.c **** // 	hiwdg.Init.Reload = 1;
 299:Core/Src/main.c **** // 	if (HAL_IWDG_Init(&hiwdg) != HAL_OK) {
 300:Core/Src/main.c **** // 		Error_Handler();
 301:Core/Src/main.c **** // 	}
 302:Core/Src/main.c **** // }
 303:Core/Src/main.c **** 
 304:Core/Src/main.c **** /* USER CODE END 4 */
 305:Core/Src/main.c **** 
 306:Core/Src/main.c **** /**
 307:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 308:Core/Src/main.c ****   * @retval None
 309:Core/Src/main.c ****   */
 310:Core/Src/main.c **** void Error_Handler(void)
 311:Core/Src/main.c **** {
 175              		.loc 1 311 1 is_stmt 1 view -0
 176              		.cfi_startproc
 177              		@ Volatile: function does not return.
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              		@ link register save eliminated.
 312:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 313:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 314:Core/Src/main.c ****   __disable_irq();
 181              		.loc 1 314 3 view .LVU33
 182              	.LBB14:
 183              	.LBI14:
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 184              		.loc 2 140 27 view .LVU34
 185              	.LBB15:
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 186              		.loc 2 142 3 view .LVU35
 187              		.syntax unified
 188              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 189 0000 72B6     		cpsid i
 190              	@ 0 "" 2
 191              		.thumb
 192              		.syntax unified
 193              	.L10:
 194              	.LBE15:
 195              	.LBE14:
 315:Core/Src/main.c ****   while (1)
 196              		.loc 1 315 3 discriminator 1 view .LVU36
 316:Core/Src/main.c ****   {
 317:Core/Src/main.c ****   }
 197              		.loc 1 317 3 discriminator 1 view .LVU37
 315:Core/Src/main.c ****   while (1)
 198              		.loc 1 315 9 discriminator 1 view .LVU38
 199 0002 FEE7     		b	.L10
 200              		.cfi_endproc
 201              	.LFE135:
 203              		.section	.text.MX_UART4_Init,"ax",%progbits
 204              		.align	1
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccF2lwUI.s 			page 16


 210              	MX_UART4_Init:
 211              	.LFB132:
 213:Core/Src/main.c **** 
 212              		.loc 1 213 1 view -0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216 0000 08B5     		push	{r3, lr}
 217              	.LCFI3:
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 3, -8
 220              		.cfi_offset 14, -4
 222:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 221              		.loc 1 222 3 view .LVU40
 222:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 222              		.loc 1 222 19 is_stmt 0 view .LVU41
 223 0002 0A48     		ldr	r0, .L15
 224 0004 0A4B     		ldr	r3, .L15+4
 225 0006 0360     		str	r3, [r0]
 223:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 226              		.loc 1 223 3 is_stmt 1 view .LVU42
 223:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 227              		.loc 1 223 24 is_stmt 0 view .LVU43
 228 0008 4FF4E133 		mov	r3, #115200
 229 000c 4360     		str	r3, [r0, #4]
 224:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 230              		.loc 1 224 3 is_stmt 1 view .LVU44
 224:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 231              		.loc 1 224 26 is_stmt 0 view .LVU45
 232 000e 0023     		movs	r3, #0
 233 0010 8360     		str	r3, [r0, #8]
 225:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 234              		.loc 1 225 3 is_stmt 1 view .LVU46
 225:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 235              		.loc 1 225 24 is_stmt 0 view .LVU47
 236 0012 C360     		str	r3, [r0, #12]
 226:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 237              		.loc 1 226 3 is_stmt 1 view .LVU48
 226:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 238              		.loc 1 226 22 is_stmt 0 view .LVU49
 239 0014 0361     		str	r3, [r0, #16]
 227:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 240              		.loc 1 227 3 is_stmt 1 view .LVU50
 227:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 241              		.loc 1 227 20 is_stmt 0 view .LVU51
 242 0016 0C22     		movs	r2, #12
 243 0018 4261     		str	r2, [r0, #20]
 228:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 244              		.loc 1 228 3 is_stmt 1 view .LVU52
 228:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 245              		.loc 1 228 25 is_stmt 0 view .LVU53
 246 001a 8361     		str	r3, [r0, #24]
 229:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 247              		.loc 1 229 3 is_stmt 1 view .LVU54
 229:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 248              		.loc 1 229 28 is_stmt 0 view .LVU55
 249 001c C361     		str	r3, [r0, #28]
ARM GAS  /tmp/ccF2lwUI.s 			page 17


 230:Core/Src/main.c ****   {
 250              		.loc 1 230 3 is_stmt 1 view .LVU56
 230:Core/Src/main.c ****   {
 251              		.loc 1 230 7 is_stmt 0 view .LVU57
 252 001e FFF7FEFF 		bl	HAL_UART_Init
 253              	.LVL7:
 230:Core/Src/main.c ****   {
 254              		.loc 1 230 6 view .LVU58
 255 0022 00B9     		cbnz	r0, .L14
 238:Core/Src/main.c **** 
 256              		.loc 1 238 1 view .LVU59
 257 0024 08BD     		pop	{r3, pc}
 258              	.L14:
 232:Core/Src/main.c ****   }
 259              		.loc 1 232 5 is_stmt 1 view .LVU60
 260 0026 FFF7FEFF 		bl	Error_Handler
 261              	.LVL8:
 262              	.L16:
 263 002a 00BF     		.align	2
 264              	.L15:
 265 002c 00000000 		.word	.LANCHOR0
 266 0030 004C0040 		.word	1073761280
 267              		.cfi_endproc
 268              	.LFE132:
 270              		.section	.text.SystemClock_Config,"ax",%progbits
 271              		.align	1
 272              		.global	SystemClock_Config
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	SystemClock_Config:
 279              	.LFB131:
 138:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 280              		.loc 1 138 1 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 80
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284 0000 00B5     		push	{lr}
 285              	.LCFI4:
 286              		.cfi_def_cfa_offset 4
 287              		.cfi_offset 14, -4
 288 0002 95B0     		sub	sp, sp, #84
 289              	.LCFI5:
 290              		.cfi_def_cfa_offset 88
 139:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 291              		.loc 1 139 3 view .LVU62
 139:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 292              		.loc 1 139 22 is_stmt 0 view .LVU63
 293 0004 3022     		movs	r2, #48
 294 0006 0021     		movs	r1, #0
 295 0008 08A8     		add	r0, sp, #32
 296 000a FFF7FEFF 		bl	memset
 297              	.LVL9:
 140:Core/Src/main.c **** 
 298              		.loc 1 140 3 is_stmt 1 view .LVU64
 140:Core/Src/main.c **** 
ARM GAS  /tmp/ccF2lwUI.s 			page 18


 299              		.loc 1 140 22 is_stmt 0 view .LVU65
 300 000e 0023     		movs	r3, #0
 301 0010 0393     		str	r3, [sp, #12]
 302 0012 0493     		str	r3, [sp, #16]
 303 0014 0593     		str	r3, [sp, #20]
 304 0016 0693     		str	r3, [sp, #24]
 305 0018 0793     		str	r3, [sp, #28]
 144:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 306              		.loc 1 144 3 is_stmt 1 view .LVU66
 307              	.LBB16:
 144:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 308              		.loc 1 144 3 view .LVU67
 309 001a 0193     		str	r3, [sp, #4]
 144:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 310              		.loc 1 144 3 view .LVU68
 311 001c 204A     		ldr	r2, .L23
 312 001e 116C     		ldr	r1, [r2, #64]
 313 0020 41F08051 		orr	r1, r1, #268435456
 314 0024 1164     		str	r1, [r2, #64]
 144:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 315              		.loc 1 144 3 view .LVU69
 316 0026 126C     		ldr	r2, [r2, #64]
 317 0028 02F08052 		and	r2, r2, #268435456
 318 002c 0192     		str	r2, [sp, #4]
 144:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 319              		.loc 1 144 3 view .LVU70
 320 002e 019A     		ldr	r2, [sp, #4]
 321              	.LBE16:
 144:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 322              		.loc 1 144 3 view .LVU71
 145:Core/Src/main.c **** 
 323              		.loc 1 145 3 view .LVU72
 324              	.LBB17:
 145:Core/Src/main.c **** 
 325              		.loc 1 145 3 view .LVU73
 326 0030 0293     		str	r3, [sp, #8]
 145:Core/Src/main.c **** 
 327              		.loc 1 145 3 view .LVU74
 328 0032 1C4B     		ldr	r3, .L23+4
 329 0034 1A68     		ldr	r2, [r3]
 330 0036 42F48042 		orr	r2, r2, #16384
 331 003a 1A60     		str	r2, [r3]
 145:Core/Src/main.c **** 
 332              		.loc 1 145 3 view .LVU75
 333 003c 1B68     		ldr	r3, [r3]
 334 003e 03F48043 		and	r3, r3, #16384
 335 0042 0293     		str	r3, [sp, #8]
 145:Core/Src/main.c **** 
 336              		.loc 1 145 3 view .LVU76
 337 0044 029B     		ldr	r3, [sp, #8]
 338              	.LBE17:
 145:Core/Src/main.c **** 
 339              		.loc 1 145 3 view .LVU77
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 340              		.loc 1 150 3 view .LVU78
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 341              		.loc 1 150 36 is_stmt 0 view .LVU79
ARM GAS  /tmp/ccF2lwUI.s 			page 19


 342 0046 0923     		movs	r3, #9
 343 0048 0893     		str	r3, [sp, #32]
 151:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 344              		.loc 1 151 3 is_stmt 1 view .LVU80
 151:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 345              		.loc 1 151 30 is_stmt 0 view .LVU81
 346 004a 4FF48033 		mov	r3, #65536
 347 004e 0993     		str	r3, [sp, #36]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 348              		.loc 1 152 3 is_stmt 1 view .LVU82
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 349              		.loc 1 152 30 is_stmt 0 view .LVU83
 350 0050 0123     		movs	r3, #1
 351 0052 0D93     		str	r3, [sp, #52]
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 352              		.loc 1 153 3 is_stmt 1 view .LVU84
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 353              		.loc 1 153 34 is_stmt 0 view .LVU85
 354 0054 0223     		movs	r3, #2
 355 0056 0E93     		str	r3, [sp, #56]
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 356              		.loc 1 154 3 is_stmt 1 view .LVU86
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 357              		.loc 1 154 35 is_stmt 0 view .LVU87
 358 0058 4FF48002 		mov	r2, #4194304
 359 005c 0F92     		str	r2, [sp, #60]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 360              		.loc 1 155 3 is_stmt 1 view .LVU88
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 361              		.loc 1 155 30 is_stmt 0 view .LVU89
 362 005e 0422     		movs	r2, #4
 363 0060 1092     		str	r2, [sp, #64]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 364              		.loc 1 156 3 is_stmt 1 view .LVU90
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 365              		.loc 1 156 30 is_stmt 0 view .LVU91
 366 0062 A822     		movs	r2, #168
 367 0064 1192     		str	r2, [sp, #68]
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 368              		.loc 1 157 3 is_stmt 1 view .LVU92
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 369              		.loc 1 157 30 is_stmt 0 view .LVU93
 370 0066 1293     		str	r3, [sp, #72]
 158:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 371              		.loc 1 158 3 is_stmt 1 view .LVU94
 158:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 372              		.loc 1 158 30 is_stmt 0 view .LVU95
 373 0068 0723     		movs	r3, #7
 374 006a 1393     		str	r3, [sp, #76]
 159:Core/Src/main.c ****   {
 375              		.loc 1 159 3 is_stmt 1 view .LVU96
 159:Core/Src/main.c ****   {
 376              		.loc 1 159 7 is_stmt 0 view .LVU97
 377 006c 08A8     		add	r0, sp, #32
 378 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 379              	.LVL10:
 159:Core/Src/main.c ****   {
ARM GAS  /tmp/ccF2lwUI.s 			page 20


 380              		.loc 1 159 6 view .LVU98
 381 0072 88B9     		cbnz	r0, .L21
 166:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 382              		.loc 1 166 3 is_stmt 1 view .LVU99
 166:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 383              		.loc 1 166 31 is_stmt 0 view .LVU100
 384 0074 0F23     		movs	r3, #15
 385 0076 0393     		str	r3, [sp, #12]
 168:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 386              		.loc 1 168 3 is_stmt 1 view .LVU101
 168:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 387              		.loc 1 168 34 is_stmt 0 view .LVU102
 388 0078 0221     		movs	r1, #2
 389 007a 0491     		str	r1, [sp, #16]
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 390              		.loc 1 169 3 is_stmt 1 view .LVU103
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 391              		.loc 1 169 35 is_stmt 0 view .LVU104
 392 007c 8023     		movs	r3, #128
 393 007e 0593     		str	r3, [sp, #20]
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 394              		.loc 1 170 3 is_stmt 1 view .LVU105
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 395              		.loc 1 170 36 is_stmt 0 view .LVU106
 396 0080 4FF48053 		mov	r3, #4096
 397 0084 0693     		str	r3, [sp, #24]
 171:Core/Src/main.c **** 
 398              		.loc 1 171 3 is_stmt 1 view .LVU107
 171:Core/Src/main.c **** 
 399              		.loc 1 171 36 is_stmt 0 view .LVU108
 400 0086 0023     		movs	r3, #0
 401 0088 0793     		str	r3, [sp, #28]
 173:Core/Src/main.c ****   {
 402              		.loc 1 173 3 is_stmt 1 view .LVU109
 173:Core/Src/main.c ****   {
 403              		.loc 1 173 7 is_stmt 0 view .LVU110
 404 008a 03A8     		add	r0, sp, #12
 405 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 406              	.LVL11:
 173:Core/Src/main.c ****   {
 407              		.loc 1 173 6 view .LVU111
 408 0090 20B9     		cbnz	r0, .L22
 177:Core/Src/main.c **** 
 409              		.loc 1 177 1 view .LVU112
 410 0092 15B0     		add	sp, sp, #84
 411              	.LCFI6:
 412              		.cfi_remember_state
 413              		.cfi_def_cfa_offset 4
 414              		@ sp needed
 415 0094 5DF804FB 		ldr	pc, [sp], #4
 416              	.L21:
 417              	.LCFI7:
 418              		.cfi_restore_state
 161:Core/Src/main.c ****   }
 419              		.loc 1 161 5 is_stmt 1 view .LVU113
 420 0098 FFF7FEFF 		bl	Error_Handler
 421              	.LVL12:
ARM GAS  /tmp/ccF2lwUI.s 			page 21


 422              	.L22:
 175:Core/Src/main.c ****   }
 423              		.loc 1 175 5 view .LVU114
 424 009c FFF7FEFF 		bl	Error_Handler
 425              	.LVL13:
 426              	.L24:
 427              		.align	2
 428              	.L23:
 429 00a0 00380240 		.word	1073887232
 430 00a4 00700040 		.word	1073770496
 431              		.cfi_endproc
 432              	.LFE131:
 434              		.section	.text.main,"ax",%progbits
 435              		.align	1
 436              		.global	main
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 440              		.fpu fpv4-sp-d16
 442              	main:
 443              	.LFB130:
  72:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 444              		.loc 1 72 1 view -0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448 0000 08B5     		push	{r3, lr}
 449              	.LCFI8:
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 3, -8
 452              		.cfi_offset 14, -4
  74:Core/Src/main.c ****   /* USER CODE END 1 */
 453              		.loc 1 74 3 view .LVU116
  80:Core/Src/main.c **** 
 454              		.loc 1 80 3 view .LVU117
 455 0002 FFF7FEFF 		bl	HAL_Init
 456              	.LVL14:
  87:Core/Src/main.c **** 
 457              		.loc 1 87 3 view .LVU118
 458 0006 FFF7FEFF 		bl	SystemClock_Config
 459              	.LVL15:
  94:Core/Src/main.c ****   MX_UART4_Init();
 460              		.loc 1 94 3 view .LVU119
 461 000a FFF7FEFF 		bl	MX_GPIO_Init
 462              	.LVL16:
  95:Core/Src/main.c ****   // MX_USB_DEVICE_Init();
 463              		.loc 1 95 3 view .LVU120
 464 000e FFF7FEFF 		bl	MX_UART4_Init
 465              	.LVL17:
  99:Core/Src/main.c ****   // USBPrint("START\n");
 466              		.loc 1 99 3 view .LVU121
 467 0012 41F28830 		movw	r0, #5000
 468 0016 FFF7FEFF 		bl	HAL_Delay
 469              	.LVL18:
 102:Core/Src/main.c ****   // sprintf(out, "IS UPDATE: %d\n", temp);
 470              		.loc 1 102 3 view .LVU122
 102:Core/Src/main.c ****   // sprintf(out, "IS UPDATE: %d\n", temp);
ARM GAS  /tmp/ccF2lwUI.s 			page 22


 471              		.loc 1 102 15 is_stmt 0 view .LVU123
 472 001a 0548     		ldr	r0, .L30
 473 001c FFF7FEFF 		bl	isUpdate
 474              	.LVL19:
 106:Core/Src/main.c ****     bool updateBool = UpdateFW(&huart4);
 475              		.loc 1 106 3 is_stmt 1 view .LVU124
 106:Core/Src/main.c ****     bool updateBool = UpdateFW(&huart4);
 476              		.loc 1 106 6 is_stmt 0 view .LVU125
 477 0020 10B9     		cbnz	r0, .L29
 478              	.LVL20:
 479              	.L26:
 114:Core/Src/main.c ****   
 480              		.loc 1 114 3 is_stmt 1 view .LVU126
 481 0022 FFF7FEFF 		bl	GoToApplication
 482              	.LVL21:
 483              	.L27:
 121:Core/Src/main.c ****   {
 484              		.loc 1 121 3 discriminator 1 view .LVU127
 129:Core/Src/main.c ****   /* USER CODE END 3 */
 485              		.loc 1 129 3 discriminator 1 view .LVU128
 121:Core/Src/main.c ****   {
 486              		.loc 1 121 9 discriminator 1 view .LVU129
 487 0026 FEE7     		b	.L27
 488              	.LVL22:
 489              	.L29:
 490              	.LBB18:
 107:Core/Src/main.c ****     // sprintf(out, "IS UPDATE: %d\n", updateBool);
 491              		.loc 1 107 5 view .LVU130
 107:Core/Src/main.c ****     // sprintf(out, "IS UPDATE: %d\n", updateBool);
 492              		.loc 1 107 23 is_stmt 0 view .LVU131
 493 0028 0148     		ldr	r0, .L30
 494              	.LVL23:
 107:Core/Src/main.c ****     // sprintf(out, "IS UPDATE: %d\n", updateBool);
 495              		.loc 1 107 23 view .LVU132
 496 002a FFF7FEFF 		bl	UpdateFW
 497              	.LVL24:
 498 002e F8E7     		b	.L26
 499              	.L31:
 500              		.align	2
 501              	.L30:
 502 0030 00000000 		.word	.LANCHOR0
 503              	.LBE18:
 504              		.cfi_endproc
 505              	.LFE130:
 507              		.global	huart4
 508              		.global	hiwdg
 509              		.section	.bss.hiwdg,"aw",%nobits
 510              		.align	2
 513              	hiwdg:
 514 0000 00000000 		.space	12
 514      00000000 
 514      00000000 
 515              		.section	.bss.huart4,"aw",%nobits
 516              		.align	2
 517              		.set	.LANCHOR0,. + 0
 520              	huart4:
 521 0000 00000000 		.space	68
ARM GAS  /tmp/ccF2lwUI.s 			page 23


 521      00000000 
 521      00000000 
 521      00000000 
 521      00000000 
 522              		.text
 523              	.Letext0:
 524              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 525              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 526              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 527              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 528              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 529              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 530              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_iwdg.h"
 531              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 532              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 533              		.file 12 "Core/Inc/wifi.h"
 534              		.file 13 "<built-in>"
ARM GAS  /tmp/ccF2lwUI.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccF2lwUI.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccF2lwUI.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccF2lwUI.s:79     .text.MX_GPIO_Init:0000000000000034 $d
     /tmp/ccF2lwUI.s:84     .text.GoToApplication:0000000000000000 $t
     /tmp/ccF2lwUI.s:91     .text.GoToApplication:0000000000000000 GoToApplication
     /tmp/ccF2lwUI.s:161    .text.GoToApplication:000000000000001c $d
     /tmp/ccF2lwUI.s:166    .text.Error_Handler:0000000000000000 $t
     /tmp/ccF2lwUI.s:173    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccF2lwUI.s:204    .text.MX_UART4_Init:0000000000000000 $t
     /tmp/ccF2lwUI.s:210    .text.MX_UART4_Init:0000000000000000 MX_UART4_Init
     /tmp/ccF2lwUI.s:265    .text.MX_UART4_Init:000000000000002c $d
     /tmp/ccF2lwUI.s:271    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccF2lwUI.s:278    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccF2lwUI.s:429    .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccF2lwUI.s:435    .text.main:0000000000000000 $t
     /tmp/ccF2lwUI.s:442    .text.main:0000000000000000 main
     /tmp/ccF2lwUI.s:502    .text.main:0000000000000030 $d
     /tmp/ccF2lwUI.s:520    .bss.huart4:0000000000000000 huart4
     /tmp/ccF2lwUI.s:513    .bss.hiwdg:0000000000000000 hiwdg
     /tmp/ccF2lwUI.s:510    .bss.hiwdg:0000000000000000 $d
     /tmp/ccF2lwUI.s:516    .bss.huart4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_RCC_DeInit
HAL_DeInit
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
isUpdate
UpdateFW
